{"version":3,"sources":["webpack:///webpack/bootstrap 7f1ccb4f72ba5c753b9e","webpack:///external \"lodash\"","webpack:///external \"bluebird\"","webpack:///external \"moment\"","webpack:///./src/db.js","webpack:///./src/util.js","webpack:///external \"path\"","webpack:///external \"ms\"","webpack:///external \"lru-cache\"","webpack:///./src/users.js","webpack:///./src/index.js","webpack:///./src/umm.js","webpack:///external \"util\"","webpack:///external \"mime\"","webpack:///./src/api.js","webpack:///external \"multer\"","webpack:///external \"multer-s3\"","webpack:///external \"aws-sdk\"","webpack:///./src/inject.js","webpack:///./src/inject.css","webpack:///external \"serve-static\"","webpack:///external \"uuid\"","webpack:///external \"botpress\"","webpack:///external \"sillyname\"","webpack:///./package.json","webpack:///./src/socket.js"],"names":["userInitiatedMessageTypes","module","exports","knex","config","conversationId","userId","knownUserId","knownConvosCache","get","Error","where","id","select","limit","then","convo","set","checkConversation","res","userInfoCache","platform","user","full_name","first_name","last_name","avatar_url","picture_url","getUserInfo","type","text","raw","data","v4","message_type","message_text","message_raw","h","json","message_data","sent_on","date","now","message","shouldUpdateLastHeard","includes","toLowerCase","join","insert","bumpLastHeardOn","Date","appendUserMessage","botName","botAvatar","appendBotMessage","title","description","logoUrl","update","logo_url","patchConversation","ignoreLifetimeExpiry","originatesFromUserMessage","recentCondition","isAfter","subtract","RECENT_CONVERSATION_LIFETIME","whereNotNull","andWhere","orderBy","conversation","last_heard_on","add","createConversation","getOrCreateRecentConversation","RECENT_CONVERSATIONS_LIMIT","conversations","conversationIds","map","c","lastMessages","isLite","lastMessagesDate","whereIn","groupBy","from","distinct","as","leftJoin","listConversations","fromId","condition","getConversationMessages","messages","forEach","Object","assign","m","getConversation","recentConversationLifetime","USER_INFO_CACHE_TTL","USER_INFO_CACHE_SIZE","KNOWN_CONVOS_CACHE_SIZE","maxAge","max","initialize","createIndex","tableName","index","schema","alterTable","table","catch","err","createTableIfNotExists","increments","primary","string","timestamp","integer","jsonb","binary","uid","Math","random","toString","substr","insertAndRetrieve","created_on","query","PREFIX_RE","sanitizeUserId","replace","USERS_CACHE_SIZE","USERS_CACHE_TTL","bp","realUserId","startsWith","getUserProfile","db","knownUsersCache","createNewUser","split","saveUser","profile_pic","getOrCreateUser","logger","error","stack","ensureUserExists","uploadsUseS3","required","default","env","uploadsS3Bucket","uploadsS3Region","uploadsS3AWSAccessKey","uploadsS3AWSAccessSecret","startNewConvoOnTimeout","init","configurator","loadAll","webchat","ready","QUICK_REPLY_PAYLOAD","getUserId","event","processQuickReplies","qrs","blocName","isArray","isString","qr","test","exec","payload","toUpperCase","loginPrompt","instruction","options","buildObjectRaw","PromisifyEvent","uploadFile","url","extension","extname","mimeType","getType","basename","storage","name","mime","carousel","customEvent","custom_type","custom_data","defaultText","isNil","to","pick","elements","encryptIfRequired","obj","Array","i","length","prop","encrypt","payloadToEncrypt","expire","unix","encrypted","crypto","JSON","stringify","processForm","formElement","hasOwnProperty","field","label","input","placeholder","subtype","maxlength","minlength","textarea","_promise","resolve","reject","_resolve","_reject","processOutgoing","ins","optionsList","quick_replies","form","strRep","inspect","getTemplates","at","renderers","registerConnector","args","templates","ERR_USER_ID_REQ","ERR_MSG_TYPE","ERR_CONV_ID_REQ","VALID_USER_ID_RE","sanitizedPayload","sanitizeIncomingMessage","persistedPayload","omit","formId","__room","events","emit","decrypted","parse","decrypt","slice","action","dest","flow","shift","node","dialogEngine","jumpTo","middlewares","sendIncoming","sendNewMessage","diskStorage","limits","files","fileSize","filename","req","file","cb","ext","originalname","getTime","upload","awsConfig","region","credentials","accessKeyId","secretAccessKey","s3","S3","s3Storage","bucket","contentType","AUTO_CONTENT_TYPE","cacheControl","acl","key","router","getRouter","auth","asyncApi","next","fn","status","send","pkg","require","modulePath","_loadedModules","root","staticFolder","use","post","params","validateUserId","body","parseInt","sendStatus","single","location","mimetype","size","stateManager","deleteState","getMessageContent","convertToTxtFile","timeFormat","metadata","format","messagesAsTxt","txt","outgoingTypes","typing","parseTyping","socketId","timeInMs","delay","botAvatarUrl","outgoingHandler","register","order","handler","msg","isNaN"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/home/epaminond/private/projects/2015.08.08_keenethics/projects/botpress/botpress/packages/channels/botpress-channel-web\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7f1ccb4f72ba5c753b9e","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 2\n// module chunks = 0","import moment from 'moment'\nimport Promise from 'bluebird'\nimport { orderBy, keyBy, throttle, memoize } from 'lodash'\nimport uuid from 'uuid'\nimport ms from 'ms'\nimport LRU from 'lru-cache'\n\nimport { DatabaseHelpers as helpers } from 'botpress'\n\nimport { sanitizeUserId } from './util'\n\nconst userInitiatedMessageTypes = ['message', 'text', 'image', 'login_prompt', 'quick_reply', 'form', 'file', 'video']\n\nmodule.exports = (knex, config) => {\n  const RECENT_CONVERSATION_LIFETIME = ms(config.recentConversationLifetime)\n  // TODO make these vars configurable?\n  const RECENT_CONVERSATIONS_LIMIT = 100\n  const USER_INFO_CACHE_TTL = ms('1 minute')\n  const USER_INFO_CACHE_SIZE = 1000\n  const KNOWN_CONVOS_CACHE_SIZE = 1000\n\n  const h = helpers(knex)\n  const isLite = () => h.isLite()\n\n  const userInfoCache = LRU({\n    maxAge: USER_INFO_CACHE_TTL,\n    max: USER_INFO_CACHE_SIZE\n  })\n\n  const knownConvosCache = LRU(KNOWN_CONVOS_CACHE_SIZE)\n\n  function initialize() {\n    if (!knex) {\n      throw new Error('you must initialize the database before')\n    }\n\n    const createIndex = (tableName, ...index) =>\n      knex.schema\n        .alterTable(tableName, table => {\n          table.index(...index)\n        })\n        .catch(err => {\n          if (err.message.includes('already exists')) {\n            return\n          }\n          throw err\n        })\n\n    return h\n      .createTableIfNotExists('web_conversations', table => {\n        table.increments('id').primary()\n        table.string('userId')\n        table.string('title')\n        table.string('description')\n        table.string('logo_url')\n        table.timestamp('created_on')\n        table.timestamp('last_heard_on') // The last time the user interacted with the bot. Used for \"recent\" conversation\n        table.timestamp('user_last_seen_on')\n        table.timestamp('bot_last_seen_on')\n      })\n      .then(() => createIndex('web_conversations', 'userId'))\n      .then(() => createIndex('web_conversations', ['id', 'userId']))\n      .then(() => createIndex('web_conversations', ['userId', knex.raw('last_heard_on DESC')]))\n      .then(() =>\n        h.createTableIfNotExists('web_messages', table => {\n          table.string('id').primary()\n          table.integer('conversationId')\n          table.string('userId')\n          table.string('message_type')\n          table.text('message_text')\n          table.jsonb('message_raw')\n          table.binary('message_data') // Only useful if type = file\n          table.string('full_name')\n          table.string('avatar_url')\n          table.timestamp('sent_on')\n        })\n      )\n  }\n\n  async function checkConversation(conversationId, userId) {\n    const knownUserId = knownConvosCache.get(conversationId)\n    if (knownUserId === userId) {\n      return\n    } else if (knownUserId && knownUserId !== userId) {\n      throw new Error(`Conversation \"${conversationId}\" not found`)\n    }\n\n    const convo = await knex('web_conversations')\n      .where({ id: conversationId, userId })\n      .select('id')\n      .limit(1)\n      .then()\n      .get(0)\n\n    if (!convo) {\n      throw new Error(`Conversation \"${conversationId}\" not found`)\n    }\n\n    knownConvosCache.set(conversationId, userId)\n  }\n\n  async function getUserInfo(userId) {\n    userId = sanitizeUserId(userId)\n\n    let res = userInfoCache.get(userId)\n    if (res) {\n      return res\n    }\n\n    const user = await knex('users')\n      .where({ platform: 'webchat', userId })\n      .then()\n      .get(0)\n\n    res = {\n      full_name: user && `${user.first_name} ${user.last_name}`,\n      avatar_url: (user && user.picture_url) || null\n    }\n\n    userInfoCache.set(userId, res)\n\n    return res\n  }\n\n  const bumpLastHeardOn = memoize(conversationId =>\n    throttle(\n      () =>\n        knex('web_conversations')\n          .where('id', conversationId)\n          .update({ last_heard_on: h.date.now() })\n          .then(),\n      50\n    )\n  )\n\n  async function appendUserMessage(userId, conversationId, { type, text, raw, data }) {\n    userId = sanitizeUserId(userId)\n\n    await checkConversation(conversationId, userId)\n\n    const message = {\n      id: uuid.v4(),\n      conversationId,\n      userId,\n      ...(await getUserInfo(userId)),\n      message_type: type,\n      message_text: text,\n      message_raw: h.json.set(raw),\n      message_data: h.json.set(data),\n      sent_on: h.date.now()\n    }\n\n    const shouldUpdateLastHeard = userInitiatedMessageTypes.includes(type.toLowerCase())\n\n    // PERF: message insertion is a serious bottlenecks\n    // consider implementing in-memory batching queue\n    // similar to logs\n\n    return Promise.join(\n      knex('web_messages')\n        .insert(message)\n        .then(),\n\n      shouldUpdateLastHeard && bumpLastHeardOn(conversationId)(),\n\n      () => ({\n        ...message,\n        sent_on: new Date(),\n        message_raw: raw,\n        message_data: data\n      })\n    )\n  }\n\n  async function appendBotMessage(botName, botAvatar, conversationId, { type, text, raw, data }) {\n    const message = {\n      id: uuid.v4(),\n      conversationId: conversationId,\n      userId: null,\n      full_name: botName,\n      avatar_url: botAvatar,\n      message_type: type,\n      message_text: text,\n      message_raw: h.json.set(raw),\n      message_data: h.json.set(data),\n      sent_on: h.date.now()\n    }\n\n    await knex('web_messages')\n      .insert(message)\n      .then()\n\n    return {\n      ...message,\n      sent_on: new Date(),\n      message_raw: raw,\n      message_data: data\n    }\n  }\n\n  const createConversation = (userId, { originatesFromUserMessage } = {}) => {\n    userId = sanitizeUserId(userId)\n\n    const uid = Math.random()\n      .toString()\n      .substr(2, 6)\n    const title = `Conversation ${uid}`\n\n    return h.insertAndRetrieve('web_conversations', {\n      userId,\n      created_on: h.date.now(),\n      last_heard_on: originatesFromUserMessage ? h.date.now() : null,\n      title\n    })\n  }\n\n  async function patchConversation(userId, conversationId, title, description, logoUrl) {\n    userId = sanitizeUserId(userId)\n\n    await knex('web_conversations')\n      .where({ id: conversationId, userId })\n      .update({\n        title,\n        description,\n        logo_url: logoUrl\n      })\n      .then()\n  }\n\n  async function getOrCreateRecentConversation(userId, { ignoreLifetimeExpiry, originatesFromUserMessage } = {}) {\n    userId = sanitizeUserId(userId)\n\n    const recentCondition =\n      !ignoreLifetimeExpiry &&\n      helpers(knex).date.isAfter('last_heard_on', moment().subtract(RECENT_CONVERSATION_LIFETIME, 'ms'))\n\n    const conversation = await knex('web_conversations')\n      .select('id', 'last_heard_on')\n      .whereNotNull('last_heard_on')\n      .andWhere({ userId })\n      .andWhere(recentCondition || {})\n      .orderBy('last_heard_on', 'desc')\n      .limit(1)\n      .then()\n      .get(0)\n\n    if (\n      conversation &&\n      moment(conversation.last_heard_on)\n        .add(RECENT_CONVERSATION_LIFETIME, 'ms')\n        .isAfter(/* no arg = now */)\n    ) {\n      return conversation.id\n    }\n\n    return createConversation(userId, { originatesFromUserMessage })\n  }\n\n  async function listConversations(userId) {\n    userId = sanitizeUserId(userId)\n\n    const conversations = await knex('web_conversations')\n      .select('id')\n      .where({ userId })\n      .orderBy('last_heard_on', 'desc')\n      .limit(RECENT_CONVERSATIONS_LIMIT)\n      .then()\n\n    const conversationIds = conversations.map(c => c.id)\n\n    let lastMessages\n\n    if (h.isLite()) {\n      const lastMessagesDate = knex('web_messages')\n        .whereIn('conversationId', conversationIds)\n        .groupBy('conversationId')\n        .select(knex.raw('max(sent_on) as date'))\n\n      lastMessages = knex\n        .from('web_messages')\n        .select('*')\n        .whereIn('sent_on', lastMessagesDate)\n    } else {\n      lastMessages = knex\n        .from('web_messages')\n        .distinct(knex.raw('ON (\"conversationId\") *'))\n        .orderBy('conversationId')\n        .orderBy('sent_on', 'desc')\n    }\n\n    // TODO: before this code was changed the join here\n    // used to be a bottleneck\n    // if true could be fixed by collecting all conv data in the first query\n    // see https://github.com/botpress/botpress/commit/16b075b1b40807833a85ef241c0110e3bc1529e5#diff-68e20bc9f0dcb53c1e8aeb45b6ec9ab8\n    // The idea is:\n    // - in the first query collect all convo data once\n    // - select the needed messages without JOIN\n    // - manually extend messages with their convo data matched by convo ID\n    return knex\n      .from(function() {\n        this.from('web_conversations')\n          .where({ userId })\n          .as('wc')\n      })\n      .leftJoin(lastMessages.as('wm'), 'wm.conversationId', 'wc.id')\n      .orderBy('wm.sent_on', 'desc')\n      .select(\n        'wc.id',\n        'wc.title',\n        'wc.description',\n        'wc.logo_url',\n        'wc.created_on',\n        'wc.last_heard_on',\n        'wm.message_type',\n        'wm.message_text',\n        knex.raw('wm.full_name as message_author'),\n        knex.raw('wm.avatar_url as message_author_avatar'),\n        knex.raw('wm.sent_on as message_sent_on')\n      )\n  }\n\n  async function getConversation(userId, conversationId, fromId = null) {\n    userId = sanitizeUserId(userId)\n\n    const condition = { userId }\n\n    if (conversationId && conversationId !== 'null') {\n      condition.id = conversationId\n    }\n\n    const conversation = await knex('web_conversations')\n      .where(condition)\n      .then()\n      .get(0)\n\n    if (!conversation) {\n      return null\n    }\n\n    const messages = await getConversationMessages(conversationId, fromId)\n\n    messages.forEach(m => {\n      Object.assign(m, {\n        message_raw: h.json.get(m.message_raw),\n        message_data: h.json.get(m.message_data)\n      })\n    })\n\n    return Object.assign({}, conversation, {\n      messages: orderBy(messages, ['sent_on'], ['asc'])\n    })\n  }\n\n  function getConversationMessages(conversationId, fromId = null) {\n    let query = knex('web_messages').where({ conversationId: conversationId })\n\n    if (fromId) {\n      query = query.andWhere('id', '<', fromId)\n    }\n\n    return query\n      .orderBy('sent_on', 'desc')\n      .limit(20)\n      .then()\n  }\n\n  return {\n    initialize,\n    appendUserMessage,\n    appendBotMessage,\n    createConversation,\n    patchConversation,\n    getConversation,\n    listConversations,\n    getOrCreateRecentConversation,\n    isLite\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/db.js","const PREFIX_RE = /^webchat:/i\n\nexport const sanitizeUserId = userId => userId.replace(PREFIX_RE, '')\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"ms\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ms\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"lru-cache\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lru-cache\"\n// module id = 7\n// module chunks = 0","import sillyname from 'sillyname'\nimport LRU from 'lru-cache'\nimport ms from 'ms'\n\nimport { sanitizeUserId } from './util'\n\nconst USERS_CACHE_SIZE = 1000\nconst USERS_CACHE_TTL = ms('10 minutes')\n\nmodule.exports = async bp => {\n  const knex = await bp.db.get()\n\n  const knownUsersCache = LRU({\n    maxAge: USERS_CACHE_TTL,\n    max: USERS_CACHE_SIZE\n  })\n\n  const createNewUser = userId => {\n    const [first_name, last_name] = sillyname().split(' ')\n\n    return bp.db.saveUser({\n      first_name,\n      last_name,\n      profile_pic: null,\n      id: userId,\n      platform: 'webchat'\n    })\n  }\n\n  const getOrCreateUser = async userId => {\n    userId = sanitizeUserId(userId)\n\n    let user = knownUsersCache.get(userId)\n    if (user) {\n      return user\n    }\n\n    user = await knex('users')\n      .where({\n        platform: 'webchat',\n        userId\n      })\n      .then()\n      .get(0)\n\n    if (!user) {\n      try {\n        user = await createNewUser(userId)\n      } catch (err) {\n        bp.logger.error(err.message, err.stack)\n        throw new Error(`User ${userId} not found`)\n      }\n    }\n\n    if (!user) {\n      throw new Error(`User ${userId} not found`)\n    }\n\n    knownUsersCache.set(userId, user)\n    return user\n  }\n\n  async function getUserProfile(userId) {\n    const realUserId = userId.startsWith('webchat:') ? userId.substr(8) : userId\n\n    const user = await knex('users')\n      .where({\n        platform: 'webchat',\n        userId: realUserId\n      })\n      .then()\n      .get(0)\n\n    return user\n  }\n\n  const ensureUserExists = async userId => {\n    await getOrCreateUser(userId)\n  }\n\n  return { getOrCreateUser, getUserProfile, ensureUserExists }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/users.js","import umm from './umm'\nimport api from './api'\nimport socket from './socket'\nimport db from './db'\n\nmodule.exports = {\n  config: {\n    uploadsUseS3: { type: 'bool', required: false, default: false, env: 'WEBCHAT_USE_S3' },\n    uploadsS3Bucket: { type: 'string', required: false, default: 'bucket-name', env: 'WEBCHAT_S3_BUCKET' },\n    uploadsS3Region: { type: 'any', required: false, default: null, env: 'WEBCHAT_S3_REGION' },\n    uploadsS3AWSAccessKey: { type: 'any', required: false, default: null, env: 'WEBCHAT_S3_ACCESS_KEY' },\n    uploadsS3AWSAccessSecret: { type: 'any', required: false, default: null, env: 'WEBCHAT_S3_KEY_SECRET' },\n    startNewConvoOnTimeout: {\n      type: 'bool',\n      required: false,\n      default: false,\n      env: 'WEBCHAT_START_NEW_CONVO_ON_TIMEOUT'\n    },\n    recentConversationLifetime: {\n      type: 'any',\n      required: false,\n      default: '6 hours',\n      env: 'WEBCHAT_RECENT_CONVERSATION_LIFETIME'\n    }\n  },\n\n  init: async function(bp, configurator) {\n    const config = await configurator.loadAll()\n\n    bp.webchat = {}\n\n    // Setup the socket events\n    await socket(bp, config)\n\n    const knex = await bp.db.get()\n    db(knex, config).initialize()\n\n    // Initialize UMM\n    return umm(bp)\n  },\n\n  ready: async function(bp, configurator) {\n    const config = await configurator.loadAll()\n\n    // Setup the APIs\n    await api(bp, config)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import util from 'util'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\nimport path from 'path'\nimport mime from 'mime'\nimport moment from 'moment'\n\nconst QUICK_REPLY_PAYLOAD = /\\<(.+)\\>\\s(.+)/i\n\nfunction getUserId(event) {\n  const userId =\n    _.get(event, 'user.id') ||\n    _.get(event, 'user.userId') ||\n    _.get(event, 'userId') ||\n    _.get(event, 'raw.from') ||\n    _.get(event, 'raw.userId') ||\n    _.get(event, 'raw.user.id')\n\n  if (!userId) {\n    throw new Error('Could not find userId in the incoming event.')\n  }\n\n  return userId\n}\n\n// TODO Extract this logic directly to botpress's UMM\nfunction processQuickReplies(qrs, blocName) {\n  if (!_.isArray(qrs)) {\n    throw new Error('Expected quick_replies to be an array')\n  }\n\n  return qrs.map(qr => {\n    if (_.isString(qr) && QUICK_REPLY_PAYLOAD.test(qr)) {\n      let [, payload, text] = QUICK_REPLY_PAYLOAD.exec(qr)\n      // <.HELLO> becomes <BLOCNAME.HELLO>\n      if (payload.startsWith('.')) {\n        payload = blocName + payload\n      }\n\n      return {\n        title: text,\n        payload: payload.toUpperCase()\n      }\n    }\n\n    return qr\n  })\n}\n\nfunction loginPrompt(event, instruction, options) {\n  const user = getUserId(event)\n\n  const raw = buildObjectRaw(event, instruction, options, user)\n\n  return PromisifyEvent({\n    platform: 'webchat',\n    type: 'login_prompt',\n    user: { id: user },\n    raw: raw,\n    text: instruction.text\n  })\n}\n\n// - type: file\n//   url: \"https://exemple.com\"\n\nfunction uploadFile(event, instruction, options) {\n  const user = getUserId(event)\n  const url = instruction.url\n\n  // if you are working on the same url\n  // you can let absolute path for your image\n\n  const extension = path.extname(url)\n\n  const mimeType = mime.getType(extension)\n\n  const basename = path.basename(url, extension)\n\n  const raw = buildObjectRaw(event, instruction, options, user)\n\n  return PromisifyEvent({\n    platform: 'webchat',\n    type: 'file',\n    user: { id: user },\n    raw: raw,\n    text: instruction.text || basename,\n    data: {\n      storage: 'remote',\n      url: url,\n      name: basename || 'unknown',\n      mime: mimeType || 'unknown'\n    }\n  })\n}\n\nfunction carousel(event, instruction, options) {\n  const user = getUserId(event)\n\n  const raw = buildObjectRaw(event, instruction, options, user)\n\n  return PromisifyEvent({\n    platform: 'webchat',\n    type: 'carousel',\n    user: { id: user },\n    raw: raw,\n    text: instruction.text\n  })\n}\n\nfunction customEvent(event, instruction, options) {\n  const user = getUserId(event)\n  const raw = buildObjectRaw(event, instruction, options, user)\n\n  return PromisifyEvent({\n    platform: 'webchat',\n    type: 'custom',\n    user: { id: user },\n    raw: { ...raw, custom_type: instruction.type, custom_data: instruction.data },\n    text: instruction.text\n  })\n}\n\nfunction defaultText(event, instruction, options) {\n  const user = getUserId(event)\n  const raw = buildObjectRaw(event, instruction, options, user)\n\n  if (!_.isNil(instruction.text)) {\n    return PromisifyEvent({\n      platform: 'webchat',\n      type: 'text',\n      user: { id: user },\n      raw: raw,\n      text: instruction.text\n    })\n  }\n}\n\n// Build the raw obj to pass to the Promise\nfunction buildObjectRaw(event, instruction, options, user) {\n  const raw = Object.assign(\n    {\n      to: user,\n      message: instruction.text || null\n    },\n    options,\n    _.pick(event && event.raw, 'conversationId')\n  )\n\n  if (raw.elements) {\n    encryptIfRequired(raw.elements, event.bp, user)\n  }\n\n  return raw\n}\n\nfunction encryptIfRequired(obj, bp, user) {\n  if (obj instanceof Array) {\n    for (let i = 0; i < obj.length; i++) {\n      encryptIfRequired(obj[i], bp, user)\n    }\n  } else {\n    for (const prop in obj) {\n      if (prop === 'encrypt' && obj.encrypt && obj.payload) {\n        const payloadToEncrypt = {\n          userId: user,\n          expire: moment()\n            .add(1, 'hours')\n            .unix(),\n          ...obj.payload\n        }\n\n        const encrypted = bp.crypto.encrypt(JSON.stringify(payloadToEncrypt))\n\n        obj.payload = `crypt|${encrypted}`\n        delete obj.encrypt\n      }\n\n      if (obj[prop] instanceof Object || obj[prop] instanceof Array) {\n        encryptIfRequired(obj[prop], bp, user)\n      }\n    }\n  }\n}\n\nfunction processForm(formElement) {\n  if (_.isArray(formElement)) {\n    throw new Error('Expected `form` to be an object!')\n  }\n  if (!formElement.hasOwnProperty('id') || formElement.id === null) {\n    throw new Error('Expected `form.id` field')\n  }\n  if (!formElement.hasOwnProperty('elements') || !_.isArray(formElement.elements)) {\n    throw new Error('Expected `form.elements` to be an Array!')\n  }\n  return {\n    title: formElement.title,\n    id: formElement.id,\n    elements: formElement.elements.map(field => {\n      if ('input' in field) {\n        // Input field\n        return {\n          label: field.input.label,\n          placeholder: field.input.placeholder || '',\n          name: field.input.name,\n          type: 'input',\n          subtype: field.input.subtype || '',\n          maxlength: field.input.maxlength || '',\n          minlength: field.input.minlength || '',\n          required: field.input.required || false\n        }\n      } else if ('textarea' in field) {\n        // Textarea field\n        return {\n          label: field.textarea.label,\n          placeholder: field.textarea.placeholder || '',\n          name: field.textarea.name,\n          type: 'textarea',\n          maxlength: field.textarea.maxlength || '',\n          minlength: field.textarea.minlength || '',\n          required: field.textarea.required || false\n        }\n      } else if ('select' in field) {\n        // Select field\n        return {\n          label: field.select.label,\n          placeholder: field.select.placeholder || '',\n          name: field.select.name,\n          options: field.select.options,\n          required: field.select.required || false,\n          type: 'select'\n        }\n      } else {\n        throw new Error('Cannot recognize element type!')\n      }\n    })\n  }\n}\n\nfunction PromisifyEvent(event) {\n  if (!event._promise) {\n    event._promise = new Promise((resolve, reject) => {\n      event._resolve = resolve\n      event._reject = reject\n    })\n  }\n\n  return event\n}\n\nfunction processOutgoing({ event, blocName, instruction }) {\n  const ins = Object.assign({}, instruction) // Create a shallow copy of the instruction\n\n  ////////\n  // PRE-PROCESSING\n  ////////\n\n  const optionsList = ['typing', 'quick_replies', 'file', 'form', 'elements', 'web-style', 'settings', 'markdown']\n\n  const options = _.pick(instruction, optionsList)\n\n  for (const prop of optionsList) {\n    delete ins[prop]\n  }\n\n  if (options.quick_replies) {\n    options.quick_replies = processQuickReplies(options.quick_replies, blocName)\n  }\n\n  // TODO : Make a Quick_replies than handle text and picture.\n\n  if (options.form) {\n    options.form = processForm(options.form)\n  }\n  /////////\n  /// Processing\n  /////////\n\n  if (instruction.type === 'login_prompt') {\n    return loginPrompt(event, instruction, options)\n  } else if (instruction.type === 'file') {\n    return uploadFile(event, instruction, options)\n  } else if (instruction.type === 'carousel') {\n    return carousel(event, instruction, options)\n  } else if (instruction.type === 'location_picker') {\n    // TODO\n  } else if (instruction.type && instruction.type.startsWith('@')) {\n    return customEvent(event, instruction, options)\n  } else {\n    return defaultText(event, instruction, options)\n  }\n\n  ////////////\n  /// POST-PROCESSING\n  ////////////\n\n  // Nothing to post-process yet\n\n  ////////////\n  /// INVALID INSTRUCTION\n  ////////////\n\n  const strRep = util.inspect(instruction, false, 1)\n  throw new Error(`Unrecognized instruction on Web in bloc '${blocName}': ${strRep}`)\n}\n\n////////////\n/// TEMPLATES\n////////////\n\nfunction getTemplates() {\n  return []\n}\n\nmodule.exports = bp => {\n  const [renderers, registerConnector] = _.at(bp, ['renderers', 'renderers.registerConnector'])\n\n  renderers &&\n    registerConnector &&\n    registerConnector({\n      platform: 'webchat',\n      processOutgoing: args => processOutgoing(Object.assign({}, args, { bp })),\n      templates: getTemplates()\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/umm.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"mime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mime\"\n// module id = 13\n// module chunks = 0","import _ from 'lodash'\nimport path from 'path'\nimport multer from 'multer'\nimport multers3 from 'multer-s3'\nimport aws from 'aws-sdk'\nimport moment from 'moment'\n\nimport injectScript from 'raw-loader!./inject.js'\nimport injectStyle from 'raw-loader!./inject.css'\n\nimport serveStatic from 'serve-static'\n\nimport db from './db'\nimport users from './users'\n\nconst ERR_USER_ID_REQ = '`userId` is required and must be valid'\nconst ERR_MSG_TYPE = '`type` is required and must be valid'\nconst ERR_CONV_ID_REQ = '`conversationId` is required and must be valid'\nconst VALID_USER_ID_RE = /^[a-z0-9-_~]+$/i\n\nmodule.exports = async (bp, config) => {\n  const diskStorage = multer.diskStorage({\n    limits: {\n      files: 1,\n      fileSize: 5242880 // 5MB\n    },\n    filename: function(req, file, cb) {\n      const userId = _.get(req, 'params.userId') || 'anonymous'\n      const ext = path.extname(file.originalname)\n\n      cb(null, `${userId}_${new Date().getTime()}${ext}`)\n    }\n  })\n\n  let upload = null\n\n  if (config.uploadsUseS3) {\n    /*\n      You can override AWS's default settings here. Example:\n      { region: 'us-east-1', apiVersion: '2014-10-01', credentials: {...} }\n     */\n    const awsConfig = {\n      region: config.uploadsS3Region,\n      credentials: {\n        accessKeyId: config.uploadsS3AWSAccessKey,\n        secretAccessKey: config.uploadsS3AWSAccessSecret\n      }\n    }\n\n    if (!awsConfig.credentials.accessKeyId && !awsConfig.credentials.secretAccessKey) {\n      delete awsConfig.credentials\n    }\n\n    if (!awsConfig.region) {\n      delete awsConfig.region\n    }\n\n    const s3 = new aws.S3(awsConfig)\n    const s3Storage = multers3({\n      s3: s3,\n      bucket: config.uploadsS3Bucket || 'uploads',\n      contentType: multers3.AUTO_CONTENT_TYPE,\n      cacheControl: 'max-age=31536000', // one year caching\n      acl: 'public-read',\n      key: function(req, file, cb) {\n        const userId = _.get(req, 'params.userId') || 'anonymous'\n        const ext = path.extname(file.originalname)\n\n        cb(null, `${userId}_${new Date().getTime()}${ext}`)\n      }\n    })\n\n    upload = multer({ storage: s3Storage })\n  } else {\n    upload = multer({ storage: diskStorage })\n  }\n\n  const knex = await bp.db.get()\n\n  const {\n    listConversations,\n    getConversation,\n    appendUserMessage,\n    getOrCreateRecentConversation,\n    createConversation\n  } = db(knex, config)\n\n  const { getOrCreateUser, getUserProfile, ensureUserExists } = await users(bp, config)\n\n  const router = bp.getRouter('botpress-platform-webchat', { auth: false })\n\n  const asyncApi = fn => async (req, res, next) => {\n    try {\n      await fn(req, res, next)\n    } catch (err) {\n      bp.logger.error(err.message, err.stack)\n      res.status(500).send(err && err.message)\n    }\n  }\n\n  router.get('/inject.js', (req, res) => {\n    res.contentType('text/javascript')\n    res.send(injectScript)\n  })\n\n  router.get('/inject.css', (req, res) => {\n    res.contentType('text/css')\n    res.send(injectStyle)\n  })\n\n  const pkg = require('../package.json')\n  const modulePath = bp._loadedModules[pkg.name].root\n  const staticFolder = path.join(modulePath, './static')\n  router.use('/static', serveStatic(staticFolder))\n\n  // ?conversationId=xxx (optional)\n  router.post(\n    '/messages/:userId',\n    asyncApi(async (req, res) => {\n      const { userId } = req.params || {}\n\n      if (!validateUserId(userId)) {\n        return res.status(400).send(ERR_USER_ID_REQ)\n      }\n\n      await ensureUserExists(userId)\n\n      const payload = req.body || {}\n      let { conversationId } = req.query || {}\n      conversationId = conversationId && parseInt(conversationId)\n\n      if (!['text', 'quick_reply', 'form', 'login_prompt', 'visit'].includes(payload.type)) {\n        // TODO: Support files\n        return res.status(400).send(ERR_MSG_TYPE)\n      }\n\n      if (!conversationId) {\n        conversationId = await getOrCreateRecentConversation(userId, { originatesFromUserMessage: true })\n      }\n\n      await sendNewMessage(userId, conversationId, payload)\n\n      return res.sendStatus(200)\n    })\n  )\n\n  // ?conversationId=xxx (required)\n  router.post(\n    '/messages/:userId/files',\n    upload.single('file'),\n    asyncApi(async (req, res) => {\n      const { userId } = req.params || {}\n\n      if (!validateUserId(userId)) {\n        return res.status(400).send(ERR_USER_ID_REQ)\n      }\n\n      await ensureUserExists(userId)\n\n      let { conversationId } = req.query || {}\n      conversationId = conversationId && parseInt(conversationId)\n\n      if (!conversationId) {\n        return res.status(400).send(ERR_CONV_ID_REQ)\n      }\n\n      const payload = {\n        text: `Uploaded a file [${req.file.originalname}]`,\n        type: 'file',\n        data: {\n          storage: req.file.location ? 's3' : 'local',\n          url: req.file.location || null,\n          name: req.file.originalname,\n          mime: req.file.contentType || req.file.mimetype,\n          size: req.file.size\n        }\n      }\n\n      await sendNewMessage(userId, conversationId, payload)\n\n      return res.sendStatus(200)\n    })\n  )\n\n  router.get('/conversations/:userId/:conversationId', async (req, res) => {\n    const { userId, conversationId } = req.params || {}\n\n    if (!validateUserId(userId)) {\n      return res.status(400).send(ERR_USER_ID_REQ)\n    }\n\n    return res.send(await getConversation(userId, conversationId))\n  })\n\n  router.get('/conversations/:userId', async (req, res) => {\n    const { userId } = req.params || {}\n\n    if (!validateUserId(userId)) {\n      return res.status(400).send(ERR_USER_ID_REQ)\n    }\n\n    await ensureUserExists(userId)\n\n    const conversations = await listConversations(userId)\n\n    return res.send({\n      conversations,\n      startNewConvoOnTimeout: config.startNewConvoOnTimeout,\n      recentConversationLifetime: config.recentConversationLifetime\n    })\n  })\n\n  const validateUserId = userId => VALID_USER_ID_RE.test(userId)\n\n  async function sendNewMessage(userId, conversationId, payload) {\n    if (!payload.text || !_.isString(payload.text) || payload.text.length > 360) {\n      throw new Error('Text must be a valid string of less than 360 chars')\n    }\n\n    let sanitizedPayload = _.pick(payload, ['text', 'type', 'data'])\n\n    // let the bot programmer make extra cleanup\n    if (bp.webchat && bp.webchat.sanitizeIncomingMessage) {\n      sanitizedPayload = bp.webchat.sanitizeIncomingMessage(sanitizedPayload) || sanitizedPayload\n    }\n\n    // Because we don't necessarily persist what we emit/received\n    const persistedPayload = { ...sanitizedPayload }\n\n    // We remove the password from the persisted messages for security reasons\n    if (payload.type === 'login_prompt') {\n      persistedPayload.data = _.omit(persistedPayload.data, ['password'])\n    } else if (payload.type === 'form') {\n      persistedPayload.data.formId = payload.formId\n    }\n\n    const message = {\n      ...(await appendUserMessage(userId, conversationId, persistedPayload)),\n      __room: `visitor:${userId}` // This is used to send to the relevant user's socket\n    }\n\n    bp.events.emit('guest.webchat.message', message)\n\n    const user = await getOrCreateUser(userId)\n\n    if (payload.data && payload.data.payload) {\n      const data = payload.data.payload\n\n      if (typeof data === 'string' && data.startsWith('crypt|')) {\n        let decrypted = null\n        try {\n          decrypted = JSON.parse(bp.crypto.decrypt(data.slice(6)))\n        } catch (err) {\n          throw new Error('Error while decrypting payload', err)\n        }\n\n        if (decrypted.userId != user.id) {\n          throw new Error('The encrypted payload is for a different user')\n        }\n\n        if (moment().isAfter(moment.unix(decrypted.expire))) {\n          throw new Error('User payload expired')\n        }\n\n        if (decrypted.action === 'gotoFlow') {\n          const dest = decrypted.dest.split('#')\n          const flow = dest.shift()\n          const node = dest.shift()\n\n          await bp.dialogEngine.jumpTo(user.id, flow, node)\n        }\n      }\n    }\n\n    return bp.middlewares.sendIncoming(\n      {\n        platform: 'webchat',\n        type: payload.type,\n        user: user,\n        text: sanitizedPayload.text,\n        raw: {\n          ...sanitizedPayload,\n          conversationId\n        }\n      },\n      ...(payload.data || {})\n    )\n  }\n\n  router.post(\n    '/events/:userId',\n    asyncApi(async (req, res) => {\n      const { type, payload } = req.body || {}\n      const { userId } = req.params || {}\n      const user = await getOrCreateUser(userId)\n      bp.middlewares.sendIncoming({\n        platform: 'webchat',\n        type,\n        user,\n        text: payload.text,\n        raw: _.pick(payload, ['text', 'type', 'data']),\n        ...payload.data\n      })\n      res.status(200).send({})\n    })\n  )\n\n  router.post(\n    '/conversations/:userId/:conversationId/reset',\n    asyncApi(async (req, res) => {\n      const { userId, conversationId } = req.params\n      const user = await getOrCreateUser(userId)\n\n      const payload = {\n        text: `Reset the conversation`,\n        type: 'session_reset'\n      }\n\n      await sendNewMessage(userId, conversationId, payload)\n      await bp.dialogEngine.stateManager.deleteState(user.id)\n      res.status(200).send({})\n    })\n  )\n\n  router.post('/conversations/:userId/new', async (req, res) => {\n    const { userId } = req.params\n\n    await createConversation(userId)\n\n    res.sendStatus(200)\n  })\n\n  const getMessageContent = message => {\n    switch (message.message_type) {\n      case 'file':\n        return message.message_data.url\n      case 'text':\n        return message.message_text\n      default:\n        return `Event (${message.message_type})`\n    }\n  }\n\n  const convertToTxtFile = async conversation => {\n    const { messages } = conversation\n    const user = await getUserProfile(conversation.userId)\n    const timeFormat = 'MM/DD/YY HH:mm'\n\n    const metadata = `Title: ${conversation.title}\\r\\nCreated on: ${moment(conversation.created_on).format(\n      timeFormat\n    )}\\r\\nUser: ${user.first_name} ${user.last_name}\\r\\n-----------------\\r\\n`\n\n    const messagesAsTxt = messages.map(message => {\n      if (message.message_type === 'session_reset') {\n        return ''\n      }\n\n      return `[${moment(message.sent_on).format(timeFormat)}] ${message.full_name}: ${getMessageContent(message)}\\r\\n`\n    })\n\n    return [metadata, ...messagesAsTxt].join('')\n  }\n\n  router.get('/conversations/:userId/:conversationId/download/txt', async (req, res) => {\n    const { userId, conversationId } = req.params || {}\n\n    if (!validateUserId(userId)) {\n      return res.status(400).send(ERR_USER_ID_REQ)\n    }\n\n    const conversation = await getConversation(userId, conversationId)\n    const txt = await convertToTxtFile(conversation)\n\n    res.send({ txt, name: `${conversation.title}.txt` })\n  })\n\n  return router\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api.js","module.exports = require(\"multer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"multer-s3\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer-s3\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"aws-sdk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sdk\"\n// module id = 17\n// module chunks = 0","module.exports = \"'use strict';\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\\n\\nvar injectDOMElement = function injectDOMElement(tagName, targetSelector) {\\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n\\n  var element = document.createElement(tagName);\\n  Object.keys(options).forEach(function (key) {\\n    return element[key] = options[key];\\n  });\\n  document.querySelector(targetSelector).appendChild(element);\\n  return element;\\n};\\n\\nwindow.addEventListener('message', function (_ref) {\\n  var data = _ref.data;\\n\\n  if (!data || !data.type || data.type !== 'setClass') {\\n    return;\\n  }\\n  document.querySelector('#bp-widget').setAttribute('class', data.value);\\n});\\n\\nvar init = function init(_ref2) {\\n  var _ref2$host = _ref2.host,\\n      host = _ref2$host === undefined ? '' : _ref2$host,\\n      _ref2$hideWidget = _ref2.hideWidget,\\n      hideWidget = _ref2$hideWidget === undefined ? false : _ref2$hideWidget,\\n      config = _objectWithoutProperties(_ref2, ['host', 'hideWidget']);\\n\\n  var cssHref = host + '/api/botpress-platform-webchat/inject.css';\\n  injectDOMElement('link', 'head', { rel: 'stylesheet', href: cssHref });\\n\\n  var options = encodeURIComponent(JSON.stringify({ hideWidget: hideWidget, config: config }));\\n  var iframeSrc = host + '/lite/?m=channel-web&v=embedded&options=' + options;\\n  var iframeHTML = '<iframe id=\\\\'bp-widget\\\\' frameborder=\\\\'0\\\\' src=\\\\'' + iframeSrc + '\\\\' />';\\n  injectDOMElement('div', 'body', { id: 'bp-web-widget', innerHTML: iframeHTML });\\n\\n  var iframeWindow = document.querySelector('#bp-web-widget > #bp-widget').contentWindow;\\n  var configure = function configure(payload) {\\n    return iframeWindow.postMessage({ action: 'configure', payload: payload }, '*');\\n  };\\n  var sendEvent = function sendEvent(payload) {\\n    return iframeWindow.postMessage({ action: 'event', payload: payload }, '*');\\n  };\\n\\n  window.botpressWebChat = _extends({}, window.botpressWebChat, { configure: configure, sendEvent: sendEvent });\\n};\\n\\nwindow.botpressWebChat = { init: init };\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/inject.js\n// module id = 18\n// module chunks = 0","module.exports = \".bp-widget-web {\\n  border: none;\\n  display: block;\\n  position: fixed;\\n  visibility: none;\\n  z-index: 100000;\\n  max-height: 100vh;\\n  max-width: 100vw;\\n  transition: none;\\n  background: none transparent;\\n  opacity: 1;\\n  font-size: 16px;\\n  letter-spacing: 0;\\n  -webkit-font-smoothing: antialiased;\\n  padding: 0;\\n}\\n\\n.bp-widget-widget {\\n  top: auto;\\n  left: auto;\\n  bottom: 24px;\\n  right: 36px;\\n  width: 76px !important;\\n  height: 76px !important;\\n}\\n\\n.bp-widget-convo {\\n  top: auto;\\n  left: auto;\\n  bottom: 24px;\\n  right: 36px;\\n  width: 420px !important;\\n  min-height: 382px !important;\\n  max-height: 500px !important;\\n}\\n\\n.bp-widget-side {\\n  top: 0px;\\n  left: auto;\\n  bottom: 0px;\\n  right: 0px;\\n  width: 360px;\\n  height: 100% !important;\\n}\\n\\n@media only screen and (max-device-width: 768px) {\\n  .bp-widget-side {\\n    width: 100%;\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/inject.css\n// module id = 19\n// module chunks = 0","module.exports = require(\"serve-static\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"serve-static\"\n// module id = 20\n// module chunks = 0","module.exports = require(\"uuid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uuid\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"botpress\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"botpress\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"sillyname\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sillyname\"\n// module id = 23\n// module chunks = 0","module.exports = {\n\t\"name\": \"@botpress/channel-web\",\n\t\"version\": \"10.51.9\",\n\t\"description\": \"An embeddable web chat for Botpress bots\",\n\t\"main\": \"bin/node.bundle.js\",\n\t\"homepage\": \"https://github.com/botpress/modules\",\n\t\"botpress\": {\n\t\t\"menuText\": \"Web Chat\",\n\t\t\"menuIcon\": \"chrome_reader_mode\",\n\t\t\"webBundle\": \"bin/web.bundle.js\",\n\t\t\"noInterface\": true,\n\t\t\"plugins\": [\n\t\t\t{\n\t\t\t\t\"entry\": \"WebBotpressUIInjection\",\n\t\t\t\t\"position\": \"overlay\"\n\t\t\t}\n\t\t]\n\t},\n\t\"publishConfig\": {\n\t\t\"access\": \"public\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n\t\t\"watch\": \"node webpack.js --watch\",\n\t\t\"compile\": \"node webpack.js --compile\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/botpress/modules\"\n\t},\n\t\"author\": \"Botpress\",\n\t\"license\": \"AGPL-3.0-only\",\n\t\"peerDependencies\": {\n\t\t\"botpress\": \">= 10.0.0\"\n\t},\n\t\"devDependencies\": {\n\t\t\"babel-core\": \"^6.26.0\",\n\t\t\"babel-loader\": \"^7.1.2\",\n\t\t\"babel-plugin-transform-async-to-generator\": \"^6.22.0\",\n\t\t\"babel-plugin-transform-decorators-legacy\": \"^1.3.4\",\n\t\t\"babel-plugin-transform-object-rest-spread\": \"^6.16.0\",\n\t\t\"babel-preset-latest\": \"^6.16.0\",\n\t\t\"babel-preset-react\": \"^6.24.0\",\n\t\t\"babel-preset-stage-0\": \"^6.16.0\",\n\t\t\"babel-register\": \"^6.18.0\",\n\t\t\"classnames\": \"^2.2.5\",\n\t\t\"copy-webpack-plugin\": \"^4.3.1\",\n\t\t\"core-js\": \"^2.4.1\",\n\t\t\"css-loader\": \"^0.28.8\",\n\t\t\"extract-text-webpack-plugin\": \"^3.0.2\",\n\t\t\"file-loader\": \"^1.1.6\",\n\t\t\"image-webpack-loader\": \"^3.4.2\",\n\t\t\"node-sass\": \"^4.9.3\",\n\t\t\"raw-loader\": \"^0.5.1\",\n\t\t\"react-chatview\": \"^0.2.5\",\n\t\t\"react-dropzone\": \"^3.13.1\",\n\t\t\"react-linkify\": \"^0.2.2\",\n\t\t\"react-resizable-box\": \"^2.0.4\",\n\t\t\"react-slick\": \"^0.23.2\",\n\t\t\"react-spinkit\": \"^3.0.0\",\n\t\t\"sass-loader\": \"^6.0.6\",\n\t\t\"slick-carousel\": \"^1.8.1\",\n\t\t\"snarkdown\": \"^1.2.2\",\n\t\t\"style-loader\": \"^0.19.1\",\n\t\t\"webpack\": \"^3.10.0\",\n\t\t\"webpack-node-externals\": \"^1.6.0\"\n\t},\n\t\"dependencies\": {\n\t\t\"aws-sdk\": \"^2.108.0\",\n\t\t\"axios\": \"^0.16.2\",\n\t\t\"bluebird\": \"^3.5.1\",\n\t\t\"date-fns\": \"^1.28.5\",\n\t\t\"lodash\": \"^4.17.4\",\n\t\t\"lru-cache\": \"^4.1.3\",\n\t\t\"mime\": \"^2.0.3\",\n\t\t\"moment\": \"^2.18.1\",\n\t\t\"ms\": \"^2.1.1\",\n\t\t\"multer\": \"^1.3.0\",\n\t\t\"multer-s3\": \"^2.7.0\",\n\t\t\"query-string\": \"^5.0.1\",\n\t\t\"react-ga\": \"^2.4.1\",\n\t\t\"serve-static\": \"^1.12.3\",\n\t\t\"sillyname\": \"^0.1.0\",\n\t\t\"uuid\": \"^3.1.0\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 24\n// module chunks = 0","import _ from 'lodash'\nimport Promise from 'bluebird'\n\nimport users from './users'\nimport db from './db'\nimport { sanitizeUserId } from './util'\n\nconst outgoingTypes = ['text', 'login_prompt', 'file', 'carousel', 'custom']\n\nmodule.exports = async (bp, config) => {\n  const knex = await bp.db.get()\n  const { appendBotMessage, getOrCreateRecentConversation } = db(knex, config)\n  const { getOrCreateUser } = await users(bp, config)\n\n  const { botName = 'Bot', botAvatarUrl = null } = config || {}\n\n  bp.middlewares.register({\n    name: 'webchat.sendMessages',\n    type: 'outgoing',\n    order: 100,\n    handler: outgoingHandler,\n    module: 'botpress-platform-webchat',\n    description:\n      'Sends out messages that targets platform = webchat.' +\n      ' This middleware should be placed at the end as it swallows events once sent.'\n  })\n\n  async function outgoingHandler(event, next) {\n    if (event.platform !== 'webchat') {\n      return next()\n    }\n\n    if (!_.includes(outgoingTypes, event.type)) {\n      return next('Unsupported event type: ' + event.type)\n    }\n\n    const userId = (event.user && event.user.id) || event.raw.to\n    const user = await getOrCreateUser(userId)\n\n    const typing = parseTyping(event)\n\n    const conversationId =\n      _.get(event, 'raw.conversationId') ||\n      (await getOrCreateRecentConversation(user.id, {\n        ignoreLifetimeExpiry: true,\n        originatesFromUserMessage: false\n      }))\n\n    const socketId = sanitizeUserId(user.userId)\n\n    if (typing) {\n      bp.events.emit('guest.webchat.typing', {\n        timeInMs: typing,\n        userId: null,\n        __room: 'visitor:' + socketId,\n        conversationId\n      })\n\n      await Promise.delay(typing)\n    }\n\n    const message = await appendBotMessage(botName, botAvatarUrl, conversationId, event)\n\n    Object.assign(message, {\n      __room: 'visitor:' + socketId // This is used to send to the relevant user's socket\n    })\n\n    bp.events.emit('guest.webchat.message', message)\n\n    // Resolve the event promise\n    event._promise && event._resolve && event._resolve()\n  }\n}\n\nfunction parseTyping(msg) {\n  if (msg.raw && !!msg.raw.typing) {\n    if (isNaN(msg.raw.typing)) {\n      return 1000\n    } else {\n      return Math.max(msg.raw.typing, 500)\n    }\n  }\n\n  return false\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/socket.js"],"sourceRoot":""}