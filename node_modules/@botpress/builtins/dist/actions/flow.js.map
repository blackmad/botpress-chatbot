{"version":3,"sources":["../../src/actions/flow.js"],"names":["wait","bp","state","event","time","console","log","Promise","delay","Joi","object","keys","number","required","default","min","max","description"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;AAEO,MAAMA,sBAAO;AAAA,+BAClB,WAAOC,EAAP,EAAWC,KAAX,EAAkBC,KAAlB,EAAyB,EAAEC,IAAF,EAAzB,EAAsC;AACpCC,YAAQC,GAAR,CAAYF,IAAZ,EAAkB,OAAOA,IAAzB;AACA,UAAMG,mBAAQC,KAAR,CAAcJ,IAAd,CAAN;AACD,GAJiB;;AAAA;AAAA;AAAA;AAAA,MAKlBK,cAAIC,MAAJ,GAAaC,IAAb,cACK,oBAAS,MAAT,EAAiB,MAAjB,EAAyB,iDAAzB,CADL;AAEEP,QAAMK,cAAIG,MAAJ,GACHC,QADG,GAEHC,OAFG,CAEK,IAFL,EAGHC,GAHG,CAGC,CAHD,EAIHC,GAJG,CAIC,KAJD,EAKHC,WALG,CAKS,6CALT;AAFR,GALkB,CAAb","file":"flow.js","sourcesContent":["import Promise from 'bluebird'\nimport Joi from 'joi'\nimport moment from 'moment'\nimport ms from 'ms'\n\nimport baseAction, { Annotate } from './base'\n\nexport const wait = baseAction(\n  async (bp, state, event, { time }) => {\n    console.log(time, typeof time)\n    await Promise.delay(time)\n  },\n  Joi.object().keys({\n    ...Annotate('Flow', 'Wait', 'Waits and do nothing for a given period of time'),\n    time: Joi.number()\n      .required()\n      .default(1000)\n      .min(1)\n      .max(60000)\n      .description('The amount of time to wait in milliseconds.')\n  })\n)\n"]}