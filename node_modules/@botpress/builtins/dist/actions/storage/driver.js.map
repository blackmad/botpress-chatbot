{"version":3,"sources":["../../../src/actions/storage/driver.js"],"names":["boxWithExpiry","value","expiry","expiryDate","add","unboxWithExpiry","box","isAfter","setStorageWithExpiry","bp","key","kvs","set","getStorageWithExpiry","get","removeStorageKeysStartingWith","knex","db","where","del","then"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEA,MAAMA,gBAAgB,CAACC,KAAD,EAAQC,SAAS,OAAjB,KAA6B;AACjD,QAAMC,aAAaD,WAAW,OAAX,GAAqB,OAArB,GAA+B,wBAASE,GAAT,CAAa,kBAAGF,MAAH,CAAb,EAAyB,cAAzB,CAAlD;;AAEA,SAAO,EAAED,KAAF,EAASC,QAAQC,UAAjB,EAAP;AACD,CAJD;;AAMA,MAAME,kBAAkBC,OAAO;AAC7B,MAAIA,OAAOA,IAAIJ,MAAX,KAAsBI,IAAIJ,MAAJ,KAAe,OAAf,IAA0B,sBAAOI,IAAIJ,MAAX,EAAmBK,OAAnB,EAAhD,CAAJ,EAAmF;AACjF,WAAOD,IAAIL,KAAX;AACD;;AAED,SAAO,IAAP;AACD,CAND;;AAQO,MAAMO;AAAA,+BAAuB,WAAOC,EAAP,EAAWC,GAAX,EAAgBT,KAAhB,EAAuBC,MAAvB,EAAkC;AACpE,UAAMI,MAAMN,cAAcC,KAAd,EAAqBC,MAArB,CAAZ;AACA,UAAMO,GAAGE,GAAH,CAAOC,GAAP,CAAWF,GAAX,EAAgBJ,GAAhB,CAAN;AACD,GAHY;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAKA,MAAMO;AAAA,gCAAuB,WAAOJ,EAAP,EAAWC,GAAX,EAAmB;AACrD,UAAMJ,MAAM,MAAMG,GAAGE,GAAH,CAAOG,GAAP,CAAWJ,GAAX,CAAlB;AACA,WAAOL,gBAAgBC,GAAhB,CAAP;AACD,GAHY;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAKA,MAAMS;AAAA,gCAAgC,WAAON,EAAP,EAAWC,GAAX,EAAmB;AAC9D,UAAMM,OAAO,MAAMP,GAAGQ,EAAH,CAAMH,GAAN,EAAnB;;AAEA,UAAME,KAAK,KAAL,EACHE,KADG,CACG,KADH,EACU,MADV,EACkBR,MAAM,GADxB,EAEHS,GAFG,GAGHC,IAHG,EAAN;AAID,GAPY;;AAAA;AAAA;AAAA;AAAA,IAAN","file":"driver.js","sourcesContent":["import moment from 'moment'\nimport _ from 'lodash'\nimport ms from 'ms'\n\nconst boxWithExpiry = (value, expiry = 'never') => {\n  const expiryDate = expiry === 'never' ? 'never' : moment().add(ms(expiry), 'milliseconds')\n\n  return { value, expiry: expiryDate }\n}\n\nconst unboxWithExpiry = box => {\n  if (box && box.expiry && (box.expiry === 'never' || moment(box.expiry).isAfter())) {\n    return box.value\n  }\n\n  return null\n}\n\nexport const setStorageWithExpiry = async (bp, key, value, expiry) => {\n  const box = boxWithExpiry(value, expiry)\n  await bp.kvs.set(key, box)\n}\n\nexport const getStorageWithExpiry = async (bp, key) => {\n  const box = await bp.kvs.get(key)\n  return unboxWithExpiry(box)\n}\n\nexport const removeStorageKeysStartingWith = async (bp, key) => {\n  const knex = await bp.db.get()\n\n  await knex('kvs')\n    .where('key', 'like', key + '%')\n    .del()\n    .then()\n}\n"]}