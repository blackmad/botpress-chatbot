{"version":3,"sources":["../../../src/actions/storage/index.js"],"names":["setUserVariable","bp","state","event","name","value","expiry","userId","user","id","key","Joi","object","keys","string","required","regex","description","any","optional","default","getUserVariable","output","result","resetUserVariable","setConversationVariable","stateId","_stateId","getConversationVariable","resetConversationVariable","setGlobalVariable","getGlobalVariable","resetGlobalVariable"],"mappings":"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","file":"index.js","sourcesContent":["import Joi from 'joi'\n\nimport baseAction, { Annotate } from '../base'\nimport { getConversationStorageKey, getUserStorageKey, getGlobalStorageKey } from '../../common'\nimport { setStorageWithExpiry, getStorageWithExpiry, removeStorageKeysStartingWith } from './driver'\n\nexport const setUserVariable = baseAction(\n  async (bp, state, event, { name, value, expiry }) => {\n    const userId = event.user.id\n    const key = getUserStorageKey(userId, name)\n    await setStorageWithExpiry(bp, key, value, expiry)\n  },\n  Joi.object().keys({\n    ...Annotate('Storage', 'Set user variable', \"Stores a variable under this user's storage, with optional expiry\"),\n    name: Joi.string()\n      .required()\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The name of the variable.'),\n    value: Joi.any()\n      .optional()\n      .description('Set the value of the variable.'),\n    expiry: Joi.string()\n      .optional()\n      .default('never')\n      .description('Set the expiry of the data, can be \"never\" or a short string like \"6 hours\".')\n  })\n)\n\nexport const getUserVariable = baseAction(\n  async (bp, state, event, { name, output }) => {\n    const userId = event.user.id\n    const key = getUserStorageKey(userId, name)\n    const result = await getStorageWithExpiry(bp, key)\n    return { ...state, [output]: result }\n  },\n  Joi.object().keys({\n    ...Annotate(\n      'Storage',\n      'Get user variable',\n      \"Retrieves a variable for this user, if that data hasn't expired. (out to `$r`)\"\n    ),\n    name: Joi.string()\n      .required()\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The name of the variable.'),\n    output: Joi.string()\n      .required()\n      .default('$r')\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The state variable to output to')\n  })\n)\n\nexport const resetUserVariable = baseAction(\n  async (bp, state, event, { name }) => {\n    const userId = event.user.id\n    const key = getUserStorageKey(userId, name)\n    await removeStorageKeysStartingWith(bp, key)\n  },\n  Joi.object().keys({\n    ...Annotate('Storage', 'Reset user variable', 'Deletes a user variable'),\n    name: Joi.string()\n      .required()\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The name of the variable.')\n  })\n)\n\nexport const setConversationVariable = baseAction(\n  async (bp, state, event, { name, value, expiry }) => {\n    const stateId = (state && state._stateId) || event.stateId || event.user.id\n    const key = getConversationStorageKey(stateId, name)\n    await setStorageWithExpiry(bp, key, value, expiry)\n  },\n  Joi.object().keys({\n    ...Annotate(\n      'Storage',\n      'Set conversation variable',\n      \"Stores a variable under this conversation's storage, with optional expiry\"\n    ),\n    name: Joi.string()\n      .required()\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The name of the variable.'),\n    value: Joi.any()\n      .optional()\n      .description('Set the value of the variable.'),\n    expiry: Joi.string()\n      .optional()\n      .default('never')\n      .description('Set the expiry of the data, can be \"never\" or a short string like \"6 hours\".')\n  })\n)\n\nexport const getConversationVariable = baseAction(\n  async (bp, state, event, { name, output }) => {\n    const stateId = (state && state._stateId) || event.stateId || event.user.id\n    const key = getConversationStorageKey(stateId, name)\n    const result = await getStorageWithExpiry(bp, key)\n    return { ...state, [output]: result }\n  },\n  Joi.object().keys({\n    ...Annotate(\n      'Storage',\n      'Get conversation variable',\n      \"Retrieves a variable for this conversation, if that data hasn't expired. (out to `$r`)\"\n    ),\n    name: Joi.string()\n      .required()\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The name of the variable.'),\n    output: Joi.string()\n      .required()\n      .default('$r')\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The state variable to output to')\n  })\n)\n\nexport const resetConversationVariable = baseAction(\n  async (bp, state, event, { name }) => {\n    const stateId = (state && state._stateId) || event.stateId || event.user.id\n    const key = getConversationStorageKey(stateId, name)\n    await removeStorageKeysStartingWith(bp, key)\n  },\n  Joi.object().keys({\n    ...Annotate('Storage', 'Reset conversation variable', 'Deletes a conversation variable'),\n    name: Joi.string()\n      .required()\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The name of the variable.')\n  })\n)\n\nexport const setGlobalVariable = baseAction(\n  async (bp, state, event, { name, value, expiry }) => {\n    const key = getGlobalStorageKey(name)\n    await setStorageWithExpiry(bp, key, value, expiry)\n  },\n  Joi.object().keys({\n    ...Annotate('Storage', 'Set global variable', 'Stores a variable globally, with optional expiry'),\n    name: Joi.string()\n      .required()\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The name of the variable.'),\n    value: Joi.any()\n      .optional()\n      .description('Set the value of the variable.'),\n    expiry: Joi.string()\n      .optional()\n      .default('never')\n      .description('Set the expiry of the data, can be \"never\" or a short string like \"6 hours\".')\n  })\n)\n\nexport const getGlobalVariable = baseAction(\n  async (bp, state, event, { name, output }) => {\n    const key = getGlobalStorageKey(name)\n    const result = await getStorageWithExpiry(bp, key)\n    return { ...state, [output]: result }\n  },\n  Joi.object().keys({\n    ...Annotate(\n      'Storage',\n      'Get global variable',\n      \"Retrieves a global variable, if that data hasn't expired. (out to `$r`)\"\n    ),\n    name: Joi.string()\n      .required()\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The name of the variable.'),\n    output: Joi.string()\n      .required()\n      .default('$r')\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The state variable to output to')\n  })\n)\n\nexport const resetGlobalVariable = baseAction(\n  async (bp, state, event, { name }) => {\n    const key = getGlobalStorageKey(name)\n    await removeStorageKeysStartingWith(bp, key)\n  },\n  Joi.object().keys({\n    ...Annotate('Storage', 'Reset global variable', 'Deletes a global variable'),\n    name: Joi.string()\n      .required()\n      .regex(/^[a-z0-9_$]+$/i, 'token with allowed $')\n      .description('The name of the variable.')\n  })\n)\n"]}