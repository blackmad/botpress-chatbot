'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _index = require('./index');

var actions = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const metadata = _lodash2.default.mapValues(actions, action => {
  try {
    const description = action(null, null, 'bp::describe-action');
    if (description) {
      const params = _lodash2.default.keys(description.children).filter(x => !x.startsWith('__'));
      const metadata = {
        title: _lodash2.default.get(description, 'children.__title.description'),
        description: _lodash2.default.get(description, 'children.__description.description'),
        category: _lodash2.default.get(description, 'children.__category.description'),
        params: []
      };

      for (const key of params) {
        const flags = description.children[key].flags;
        const required = flags && flags.presence === 'required';
        const def = flags && flags.default;

        metadata.params.push({
          description: description.children[key].description,
          name: key,
          required,
          default: def,
          type: description.children[key].type
        });
      }

      return metadata;
    }
  } catch (err) {}

  return null;
});

exports.default = metadata;
//# sourceMappingURL=metadata.js.map