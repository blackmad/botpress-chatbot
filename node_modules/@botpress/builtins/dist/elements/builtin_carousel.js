'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _builtin_base_properties = require('./builtin_base_properties');

var base = _interopRequireWildcard(_builtin_base_properties);

var _builtin_card = require('./builtin_card');

var _builtin_card2 = _interopRequireDefault(_builtin_card);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

exports.default = {
  id: 'builtin_carousel',
  renderer: '#builtin_carousel',

  group: 'Built-in Messages',
  title: 'Carousel',

  jsonSchema: _extends({
    description: 'A carousel is an array of cards',
    type: 'array',
    items: _builtin_card2.default.jsonSchema
  }, base.typingIndicators),

  computePreviewText: formData => `Carousel: ${formData.length}`,

  computeMetadata: null
};
//# sourceMappingURL=builtin_carousel.js.map