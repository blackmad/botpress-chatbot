'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _tail = require('lodash/tail');

var _tail2 = _interopRequireDefault(_tail);

var _builtin_base_properties = require('./builtin_base_properties');

var base = _interopRequireWildcard(_builtin_base_properties);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  id: 'builtin_image',
  renderer: '#builtin_image',

  group: 'Built-in Messages',
  title: 'Image',

  jsonSchema: {
    description: 'A message showing an image with an optional title',
    type: 'object',
    required: ['image'],
    properties: _extends({
      image: {
        type: 'string',
        $subtype: 'media',
        $filter: '.jpg, .png, .jpeg, .gif, .bmp, .tif, .tiff|image/*',
        title: 'Image'
      },
      title: {
        type: 'string',
        description: 'Some platforms require to name the images.',
        title: 'Title (optional)'
      }
    }, base.typingIndicators)
  },

  uiSchema: {},

  computePreviewText: formData => {
    let fileName = _path2.default.basename(formData.image);

    if (fileName.includes('-')) {
      fileName = (0, _tail2.default)(fileName.split('-')).join('-');
    }

    const title = formData.title ? ' | ' + formData.title : '';
    return `Image (${fileName})${title}`;
  },

  computeMetadata: null
};
//# sourceMappingURL=builtin_image.js.map