{"version":3,"sources":["../../src/elements/builtin_single-choice.js"],"names":["base","id","renderer","group","title","jsonSchema","description","type","required","properties","text","choices","minItems","maxItems","items","value","typingIndicators","uiSchema","variations","orderable","computePreviewText","formData","length","computeMetadata"],"mappings":";;;;;;;;AAAA;;IAAYA,I;;;;kBAEG;AACbC,MAAI,uBADS;AAEbC,YAAU,wBAFG;;AAIbC,SAAO,mBAJM;AAKbC,SAAO,eALM;;AAObC,cAAY;AACVC,iBAAa,+FADH;AAEVC,UAAM,QAFI;AAGVC,cAAU,CAAC,SAAD,CAHA;AAIVC;AACEC,YAAM;AACJH,cAAM,QADF;AAEJH,eAAO;AAFH,OADR;AAKEO,eAAS;AACPJ,cAAM,OADC;AAEPH,eAAO,SAFA;AAGPE,qBACE,sHAJK;AAKPM,kBAAU,CALH;AAMPC,kBAAU,EANH;AAOPC,eAAO;AACLP,gBAAM,QADD;AAELC,oBAAU,CAAC,OAAD,EAAU,OAAV,CAFL;AAGLC,sBAAY;AACVL,mBAAO;AACLE,2BAAa,+DADR;AAELC,oBAAM,QAFD;AAGLH,qBAAO;AAHF,aADG;AAMVW,mBAAO;AACLT,2BACE,6FAFG;AAGLC,oBAAM,QAHD;AAILH,qBAAO;AAJF;AANG;AAHP;AAPA;AALX,OA8BKJ,KAAKgB,gBA9BV;AAJU,GAPC;;AA6CbC,YAAU;AACRC,gBAAY;AACV,oBAAc;AACZC,mBAAW;AADC;AADJ;AADJ,GA7CG;;AAqDbC,sBAAoBC,YAAa,YAAWA,SAASV,OAAT,CAAiBW,MAAO,KAAID,SAASX,IAAK,EArDzE;AAsDba,mBAAiB;AAtDJ,C","file":"builtin_single-choice.js","sourcesContent":["import * as base from './builtin_base_properties'\n\nexport default {\n  id: 'builtin_single-choice',\n  renderer: '#builtin_single-choice',\n\n  group: 'Built-in Messages',\n  title: 'Single Choice',\n\n  jsonSchema: {\n    description: 'Suggest choices to the user with the intention of picking only one (with an optional message)',\n    type: 'object',\n    required: ['choices'],\n    properties: {\n      text: {\n        type: 'string',\n        title: 'Message'\n      },\n      choices: {\n        type: 'array',\n        title: 'Choices',\n        description:\n          'Protip: To prevent an element from being rendered on the channel, prefix either the Title or the Value with `!hide `',\n        minItems: 1,\n        maxItems: 10,\n        items: {\n          type: 'object',\n          required: ['title', 'value'],\n          properties: {\n            title: {\n              description: 'The title of the choice (this is what gets shown to the user)',\n              type: 'string',\n              title: 'Message'\n            },\n            value: {\n              description:\n                'The value that your bot gets when the user picks this choice (usually hidden from the user)',\n              type: 'string',\n              title: 'Value'\n            }\n          }\n        }\n      },\n      ...base.typingIndicators\n    }\n  },\n\n  uiSchema: {\n    variations: {\n      'ui:options': {\n        orderable: false\n      }\n    }\n  },\n\n  computePreviewText: formData => `Choices (${formData.choices.length}) ${formData.text}`,\n  computeMetadata: null\n}\n"]}