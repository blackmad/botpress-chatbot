'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _builtin_base_properties = require('./builtin_base_properties');

var base = _interopRequireWildcard(_builtin_base_properties);

var _builtin_actionButton = require('./builtin_action-button');

var _builtin_actionButton2 = _interopRequireDefault(_builtin_actionButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

exports.default = {
  id: 'builtin_raw',
  renderer: '#builtin_raw',

  group: 'Built-in Messages',
  title: 'Raw Platform Payload',

  jsonSchema: {
    description: 'Define a platform-specific message using JSON.',
    type: 'array',
    items: {
      type: 'object',
      required: ['title'],
      properties: {
        title: {
          type: 'string',
          title: 'Title'
        },
        platform: {
          type: 'string',
          title: 'Which platform?'
        },
        payload: {
          type: 'string',
          title: 'Raw payload (JSON)'
        }
      }
    }
  },

  uiSchema: {
    items: {
      title: {
        'ui:widget': 'text'
      },
      platform: {
        'ui:help': 'Tip: type "*" to fit all platforms'
      },
      payload: {
        'ui:widget': 'textarea',
        'ui:options': {
          rows: 10
        }
      }
    }
  },

  computePreviewText: formData => `Raw Payload: ${formData[0].title}`,

  computeMetadata: null
};
//# sourceMappingURL=builtin_raw.js.map