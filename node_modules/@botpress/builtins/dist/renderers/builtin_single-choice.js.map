{"version":3,"sources":["../../src/renderers/builtin_single-choice.js"],"names":["SKIP_CHOICE_PREFIX","takeVisible","choices","filter","c","test","value","title","data","on","text","quick_replies","map","typing","type","inputHint","suggestedActions","actions","attachments","attachment_type","name","options","parse_mode","reply_markup","JSON","stringify","keyboard","choice","one_time_keyboard"],"mappings":";;;;;AAAA,MAAMA,qBAAqB,4BAA3B;;AAEA,MAAMC,cAAcC,WAAW;AAC7B,SAAO,CAACA,WAAW,EAAZ,EAAgBC,MAAhB,CAAuBC,KAAK,CAACJ,mBAAmBK,IAAnB,CAAwBD,EAAEE,KAA1B,CAAD,IAAqC,CAACN,mBAAmBK,IAAnB,CAAwBD,EAAEG,KAA1B,CAAlE,CAAP;AACD,CAFD;;kBAIeC,QAAQ,CACrB;AACEC,MAAI,UADN;AAEEC,QAAMF,KAAKE,IAFb;AAGEC,iBAAeV,YAAYO,KAAKN,OAAjB,EAA0BU,GAA1B,CAA8BR,KAAM,IAAGA,EAAEE,KAAM,KAAIF,EAAEG,KAAM,EAA3D,CAHjB;AAIEM,UAAQL,KAAKK;AAJf,CADqB,EAOrB;AACEJ,MAAI,SADN;AAEEC,QAAMF,KAAKE,IAFb;AAGEC,iBAAeV,YAAYO,KAAKN,OAAjB,EAA0BU,GAA1B,CAA8BR,KAAM,IAAGA,EAAEE,KAAM,KAAIF,EAAEG,KAAM,EAA3D,CAHjB;AAIEM,UAAQL,KAAKK;AAJf,CAPqB,EAarB;AACEJ,MAAI,WADN;AAEEK,QAAM,SAFR;AAGEJ,QAAMF,KAAKE,IAHb;AAIEK,aAAW,gBAJb;AAKEC,oBAAkB;AAChBC,aAAShB,YAAYO,KAAKN,OAAjB,EAA0BU,GAA1B,CAA8BR,MAAM;AAC3CU,YAAM,QADqC;AAE3CP,aAAOH,EAAEG,KAFkC;AAG3CD,aAAOF,EAAEE;AAHkC,KAAN,CAA9B;AADO;AALpB,CAbqB,EA0BrB;AACEG,MAAI,OADN;AAEES,eAAa,CACX;AACER,UAAMF,KAAKE,IADb;AAEES,qBAAiB,SAFnB;AAGEF,aAAShB,YAAYO,KAAKN,OAAjB,EAA0BU,GAA1B,CAA8BR,MAAM;AAC3CgB,YAAM,OADqC;AAE3CV,YAAMN,EAAEG,KAFmC;AAG3CO,YAAM,QAHqC;AAI3CR,aAAOF,EAAEE;AAJkC,KAAN,CAA9B;AAHX,GADW;AAFf,CA1BqB,EAyCrB;AACEG,MAAI,UADN;AAEEF,SAAOC,KAAKE,IAFd;AAGEW,WAAS;AACPC,gBAAY,UADL;AAEPC,kBAAcC,KAAKC,SAAL,CAAe;AAC3BC,gBAAU,CACRzB,YAAYO,KAAKN,OAAjB,EAA0BU,GAA1B,CAA8Be,WAAW;AACvCjB,cAAMiB,OAAOpB;AAD0B,OAAX,CAA9B,CADQ,CADiB;AAM3BqB,yBAAmB;AANQ,KAAf;AAFP;AAHX,CAzCqB,C","file":"builtin_single-choice.js","sourcesContent":["const SKIP_CHOICE_PREFIX = /^!skip |^!hide |^!hidden /i\n\nconst takeVisible = choices => {\n  return (choices || []).filter(c => !SKIP_CHOICE_PREFIX.test(c.value) && !SKIP_CHOICE_PREFIX.test(c.title))\n}\n\nexport default data => [\n  {\n    on: 'facebook',\n    text: data.text,\n    quick_replies: takeVisible(data.choices).map(c => `<${c.value}> ${c.title}`),\n    typing: data.typing\n  },\n  {\n    on: 'webchat',\n    text: data.text,\n    quick_replies: takeVisible(data.choices).map(c => `<${c.value}> ${c.title}`),\n    typing: data.typing\n  },\n  {\n    on: 'microsoft',\n    type: 'message',\n    text: data.text,\n    inputHint: 'expectingInput',\n    suggestedActions: {\n      actions: takeVisible(data.choices).map(c => ({\n        type: 'imBack',\n        title: c.title,\n        value: c.value\n      }))\n    }\n  },\n  {\n    on: 'slack',\n    attachments: [\n      {\n        text: data.text,\n        attachment_type: 'default',\n        actions: takeVisible(data.choices).map(c => ({\n          name: 'press',\n          text: c.title,\n          type: 'button',\n          value: c.value\n        }))\n      }\n    ]\n  },\n  {\n    on: 'telegram',\n    title: data.text,\n    options: {\n      parse_mode: 'Markdown',\n      reply_markup: JSON.stringify({\n        keyboard: [\n          takeVisible(data.choices).map(choice => ({\n            text: choice.title\n          }))\n        ],\n        one_time_keyboard: true\n      })\n    }\n  }\n]\n"]}